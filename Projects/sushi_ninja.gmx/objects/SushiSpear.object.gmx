<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_sushi_baddie_spear</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>BaddieParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize the sush

image_speed = 0.3;
image_index = 0;

//Plysics variables
sight = 128;
spd = 8;
accel = 2;
grav = 1;
factor = 2
hp = 3;
maxhp = 3;
hspd = 0;
vspd = 0;


//set the sushi's state
state = sushi_idle_state;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy the sushi

event_inherited();

//play sound later
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Execute state
script_execute(state);

if(hp &lt;= 0){
    //die
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Run if not already in the run state
//This means we're in the air!    
if(!place_meeting(x, y+1, Solid)){
    show_debug_message("falling");
    vspd += grav;//appply gravity
}else{
        vspd = 0;
                //check for idle state
                var dist = distance_to_object(Player);
                if(dist &lt; sight){
                    if(dist &lt;= 70){
                        hspd = 0;
                        sprite_index = spr_sushi_baddie_spear;
                        image_speed = 0.2;//idle speed 20%&lt;--redundant...
                        state = sushi_idle_state;
                    }else{
                        //image_index = 0;
                        show_debug_message("setting run ani");
                        sprite_index = spr_sushi_baddie_spear_running;
                        image_speed = 0.3;//running speed 30%
                        state = sushi_run_state;
                        hspd = sign(Player.x - x)*spd;
                    }
                }else{
                    //image_index = 0;
                    sprite_index = spr_sushi_baddie_spear;
                    image_speed = 0.2;//idle speed 20%&lt;--redundant...
                }
}
        show_debug_message("setting hspd = " + string(hspd));
        //Move the sushi
        show_debug_message("moving with spd of " + string(hspd));
        move(Solid);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
